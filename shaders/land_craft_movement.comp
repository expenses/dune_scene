#version 450

#include "includes/structs.glsl"
#include "includes/utils.glsl"

layout(set = 0, binding = 4) uniform TimeBuffer {
    Time time;
};

layout(set = 0, binding = 2) uniform sampler u_sampler;

layout(set = 1, binding = 0) buffer LandCraftBuffer {
    LandCraft crafts[];
};

layout(set = 1, binding = 1) uniform texture2D height_map;

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

const float SCENE_SIZE = 4.0;

void main() {
    uint index = gl_GlobalInvocationID.x;

    if (index >= crafts.length()) {
        return;
    }

    LandCraft craft = crafts[index];

    vec2 velocity = vec2(sin(craft.facing), cos(craft.facing)) * time.delta_time;
    craft.position.xz += velocity;
    craft.position.xz = repeat_over_bounds(craft.position.xz, 2.0);

    vec2 uv = craft.position.xz / SCENE_SIZE + 0.5;

    float height = textureLod(sampler2D(height_map, u_sampler), uv, 0).r;

    craft.position.y = height;

    crafts[index] = craft;
}

