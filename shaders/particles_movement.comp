
#version 450

#include "includes/structs.glsl"

layout(set = 0, binding = 0) uniform CameraUniform {
    Camera camera;
};

layout(set = 0, binding = 4) uniform TimeBuffer {
    Time time;
};

layout(set = 1, binding = 0) buffer ParticlesBuffer {
    Particle particles[];
};

layout(set = 1, binding = 1) readonly buffer ParticlesInfo {
    ParticlesBufferInfo particles_info;
};


layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

void main() {
    uint index = gl_GlobalInvocationID.x;

    if (index >= particles.length()) {
        return;
    }

    Particle particle = particles[index];

    particle.position += particle.velocity * time.delta_time;
    particle.time_alive_percentage += time.delta_time / particles_info.particle_duration;
    particle.view_space_position = (camera.view * vec4(particle.position, 1.0)).xyz;

    particles[index] = particle;
}
