
#version 450

#include "../includes/structs.glsl"
#include "../includes/matrices.glsl"
#include "../includes/rotor.glsl"
#include "../includes/similarity.glsl"

layout(set = 0, binding = 0) writeonly buffer JointTransforms {
    Similarity joint_transforms[];
};

layout(set = 0, binding = 1) uniform AnimatedModelInfoUniform {
    AnimatedModelInfo animated_model_info;
};

layout(set = 0, binding = 4) readonly buffer GlobalTransforms {
    Similarity global_transforms[];
};

layout(set = 0, binding = 6) readonly buffer JointIndicesToNodeIndices {
    uint joint_indices_to_node_indices[];
};

layout(set = 0, binding = 7) readonly buffer InverseBindTransforms {
    Similarity inverse_bind_transforms[];
};

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

void main() {
    uint global_joint_index = gl_GlobalInvocationID.x;

    uint instance_index = global_joint_index / animated_model_info.num_joints;

    if (instance_index >= animated_model_info.num_instances) {
        return;
    }

    uint global_node_offset = instance_index * animated_model_info.num_nodes;
    uint local_joint_index = global_joint_index % animated_model_info.num_joints;
    uint global_node_index = global_node_offset + joint_indices_to_node_indices[local_joint_index];

    Similarity inverse_bind_transform = inverse_bind_transforms[local_joint_index];
    Similarity matrix_global_transform = global_transforms[global_node_index];

    joint_transforms[global_joint_index] = similarity_mul_similarity(matrix_global_transform, inverse_bind_transform);
}
